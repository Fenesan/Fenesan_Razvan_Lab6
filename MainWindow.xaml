<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Fenesan_Razvan_Lab6"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="Fenesan_Razvan_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="inventoryViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Inventory}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerOrderViewSource" Source="{Binding Order, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="349" Margin="10,39,0,0" VerticalAlignment="Top" Width="604">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="43.2"/>
                        <ColumnDefinition Width="41*"/>
                        <ColumnDefinition Width="16*"/>
                        <ColumnDefinition Width="498*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="47.75,28,50.4,192.8" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="70.75,209,0,0" VerticalAlignment="Top" Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"
                                 Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"
                                 Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>
                    <Button x:Name="btnPrev" Content="Previous" Grid.Column="3" HorizontalAlignment="Left" Margin="47.75,146,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-1.274,0.419" Click="btnPrev_Click"/>
                    <Button x:Name="btnNew" Grid.ColumnSpan="3" Content="New" Grid.Column="1" HorizontalAlignment="Left" Margin="1.8,33,0,0" VerticalAlignment="Top" Width="75" Click="btnNew_Click_1"/>
                    <Button x:Name="btnEdit" Grid.ColumnSpan="4" Content="Edit" HorizontalAlignment="Left" Margin="43,69,0,0" VerticalAlignment="Top" Width="75" Click="btnEdit_Click"/>
                    <Button x:Name="btnDelete" Grid.ColumnSpan="4" Content="Delete" HorizontalAlignment="Left" Margin="43,109,0,0" VerticalAlignment="Top" Width="75" Click="btnDelete_Click"/>
                    <Button x:Name="btnSave" Grid.ColumnSpan="4" Content="Save" HorizontalAlignment="Left" Margin="43,212,0,0" VerticalAlignment="Top" Width="75" Click="btnSave_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <!--Butonnul Save va fi inactiv daca exista erori de validare-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="btnCancel" Grid.ColumnSpan="3" Content="Cancel" Grid.Column="1" HorizontalAlignment="Left" Margin="1.8,250,0,0" VerticalAlignment="Top" Width="75" Click="btnCancel_Click"/>
                    <Button x:Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="372.75,151,0,0" VerticalAlignment="Top" Width="75" Click="btnNext_Click" Grid.Column="3"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource inventoryViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="33*"/>
                        <ColumnDefinition Width="566*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" Grid.Column="1" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="180.2,27,27.4,157.8" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="colorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnPrev1" Content="Previous" Grid.Column="1" HorizontalAlignment="Left" Margin="180.2,179,0,0" VerticalAlignment="Top" Width="75" Click="btnPrev1_Click_1"/>
                    <Button x:Name="btnNext1" Content="Next" Grid.Column="1" HorizontalAlignment="Left" Margin="483.2,179,0,0" VerticalAlignment="Top" Width="75" Click="btnNext1_Click_1"/>
                    <Grid x:Name="grid2" Grid.Column="1" HorizontalAlignment="Left" Margin="271.2,215,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="Color:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="colorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Color, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button x:Name="btnNew1" Content="New" Grid.Column="1" HorizontalAlignment="Left" Margin="34.2,38,0,0" VerticalAlignment="Top" Width="75" Click="btnNew1_Click"/>
                    <Button x:Name="btnEdit1" Content="Edit" Grid.Column="1" HorizontalAlignment="Left" Margin="34.2,74,0,0" VerticalAlignment="Top" Width="75" Click="btnEdit1_Click"/>
                    <Button x:Name="btnDelete1" Content="Delete" Grid.Column="1" HorizontalAlignment="Left" Margin="34.2,113,0,0" VerticalAlignment="Top" Width="75" Click="btnDelete1_Click"/>
                    <Button x:Name="btnSave1" Content="Save" Grid.Column="1" HorizontalAlignment="Left" Margin="34.2,218,0,0" VerticalAlignment="Top" Width="75" Click="btnSave1_Click"/>
                    <Button x:Name="btnCancel1" Content="Cancel" Grid.Column="1" HorizontalAlignment="Left" Margin="34.2,263,0,0" VerticalAlignment="Top" Width="75" Click="btnCancel1_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerOrderViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="7*"/>
                        <ColumnDefinition Width="43*"/>
                        <ColumnDefinition Width="249*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="cmbCustomers" HorizontalAlignment="Left" Margin="87,56,0,0" VerticalAlignment="Top" Width="120" Grid.Column="2">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cmbInventory" HorizontalAlignment="Left" Margin="282,56,0,0" VerticalAlignment="Top" Width="120" Grid.Column="2">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Color"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label x:Name="lblCustomers" Content="Customers" HorizontalAlignment="Left" Margin="116,24,0,0" VerticalAlignment="Top" Grid.Column="2"/>
                    <Label x:Name="lblInventory" Content="Inventory" HorizontalAlignment="Left" Margin="308,24,0,0" VerticalAlignment="Top" Grid.Column="2"/>
                    <DataGrid x:Name="orderDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="87,81,96.4,158.8" RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True" Grid.Column="2">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ColorColumn" Binding="{Binding Color}" Header="Color" Width="SizeToHeader"/>

                            <DataGridTextColumn x:Name="carIDColumn1" Binding="{Binding CarID}" Header="Car ID" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="custIDColumn1" Binding="{Binding CustID}" Header="Cust ID" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="orderIdColumn" Binding="{Binding OrderId}" Header="Order Id" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="btnEdit2" Content="Edit" HorizontalAlignment="Left" Margin="36,56,0,0" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="2" Click="btnEdit2_Click" Grid.Column="1"/>
                    <Button x:Name="btnDelete2" Content="Delete" HorizontalAlignment="Left" Margin="36,99,0,0" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="2" Click="btnDelete2_Click" Grid.Column="1"/>
                    <Button x:Name="btnNew2" Content="New" HorizontalAlignment="Left" Margin="36,10,0,0" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="2" Click="btnNew2_Click" Grid.Column="1"/>
                    <Button x:Name="btnSave2" Content="Save" HorizontalAlignment="Left" Margin="36,210,0,0" VerticalAlignment="Top" Width="75" Click="btnSave2_Click" Grid.ColumnSpan="2" Grid.Column="1"/>
                    <Button x:Name="btnCancel2" Content="Cancel" HorizontalAlignment="Left" Margin="36,267,0,0" VerticalAlignment="Top" Width="75" Grid.ColumnSpan="2" Click="btnCancel2_Click" Grid.Column="1"/>
                    <Button x:Name="btnPrev2" Content="Previous" HorizontalAlignment="Left" Margin="87,195,0,0" VerticalAlignment="Top" Width="75" Grid.Column="2" Click="btnPrev2_Click"/>
                    <Button x:Name="btnNext2" Content="Next" HorizontalAlignment="Left" Margin="327,195,0,0" VerticalAlignment="Top" Width="75" Grid.Column="2" Click="btnNext2_Click"/>
                    <Label x:Name="lblOrderId" Content="Order Id" HorizontalAlignment="Left" Margin="87,232,0,0" VerticalAlignment="Top" Grid.Column="2"/>
                    <Label x:Name="lblCarId" Content="Car Id" HorizontalAlignment="Left" Margin="87,258,0,0" VerticalAlignment="Top" Grid.Column="2"/>
                    <Label x:Name="lblCustId" Content="Cust Id" HorizontalAlignment="Left" Margin="87,284,0,0" VerticalAlignment="Top" Grid.Column="2"/>
                    <TextBox x:Name="OrderIdTextBox" HorizontalAlignment="Left" Height="23" Margin="175,235,0,0" TextWrapping="Wrap" Text="{Binding OrderId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="120" IsEnabled="False" Grid.Column="2"/>
                    <TextBox x:Name="CarIdTextBox1" HorizontalAlignment="Left" Height="23" Margin="175,258,0,0" TextWrapping="Wrap" Text="{Binding CarID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="120" Grid.Column="2"/>
                    <TextBox x:Name="CustIdTextBox1" Grid.Column="2" HorizontalAlignment="Left" Height="23" Margin="175,281,0,0" TextWrapping="Wrap" Text="{Binding CustID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Top" Width="120"/>
                </Grid>
            </TabItem>
        </TabControl>

    </Grid>
</Window>
